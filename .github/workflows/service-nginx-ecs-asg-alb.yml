name: 'Service: nginx-ecs-asg-alb'

on: push
    # paths:
    #   - kloud/dev/eu-west-1/nginx-ecs-asg-alb/**

env:
  AWS_ACCOUNT_ID: "016272825626"
  AWS_REGION: "eu-west-1"

permissions:
  id-token: write
  contents: read

defaults:
 run:
  working-directory: kloud/dev/eu-west-1/nginx-ecs-asg-alb

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/terragrunt-github-ci
        role-session-name: terragrunt-ci
        aws-region: ${{ env.AWS_REGION }}
    - uses: actions/checkout@v3
    - name: Setup Terraform & Terragrunt
      run: |
        brew install tfenv warrensbox/tap/tgswitch
        tfenv install
        tgswitch
    - name: terragrunt fmt
      id: fmt
      run: terragrunt fmt -check -diff
    - name: terragrunt init
      id: init
      run: terragrunt init
    - name: terragrunt validate
      id: validate
      run: terragrunt validate
    - name: cache terragrunt cache
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-terragrunt-cache-${{ hashFiles('**/.terraform.lock.hcl') }}
        path: |
          .terragrunt-cache/**
          .terraform-lock.hcl
  plan:
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/terragrunt-github-ci
        role-session-name: terragrunt-ci
        aws-region: ${{ env.AWS_REGION }}
    - uses: actions/checkout@v3
    - name: Setup Terraform & Terragrunt
      run: |
        brew install tfenv warrensbox/tap/tgswitch
        tfenv install
        tgswitch
    - name: terragrunt plan
      id: plan
      if: ${{ github.event_name != 'pull_request' }}
      run: terragrunt plan
      continue-on-error: true
    - name: cache terragrunt plan
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-terragrunt-plan-${{ hashFiles('**/.terraform.lock.hcl') }}
        path: |
          .tgplan.out
  apply:
    needs: plan
    runs-on: ubuntu-latest
    steps:
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/terragrunt-github-ci
        role-session-name: terragrunt-ci
        aws-region: ${{ env.AWS_REGION }}
    - uses: actions/checkout@v3
    - name: Setup Terraform & Terragrunt
      run: |
        brew install tfenv warrensbox/tap/tgswitch
        tfenv install
        tgswitch
    - name: terragrunt apply
      id: deploy
      if: ${{ github.ref != 'refs/heads/main' }} && ${{ github.event_name != 'push' }}
      run: terragrunt apply